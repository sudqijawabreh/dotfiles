" .ideavimrc is a configuration file for IdeaVim plugin. It uses
"   the same commands as the original .vimrc configuration.
" You can find a list of commands here: https://jb.gg/h38q75
" Find more examples here: https://jb.gg/share-ideavimrc
let mapleader = " "

"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=5

nmap gr <Action>(FindUsages)
nmap <s-k> <Action>(ShowHoverInfo)
nmap gi <Action>(GotoImplementation)
nmap gu <Action>(GotoSuperMethod)
nmap <C-o> <Action>(Back)
nmap <C-i> <Action>(Forward)
nmap <leader>z <Action>(ToggleDistractionFreeMode)
nmap <C-v> "+P
vnoremap <C-c> "+y
inoremap <C-v> <C-r>+
cnoremap <C-v> <C-r>+
vnoremap <C-v> "+p
nmap <leader>h :noh<cr>
nmap <leader>gb <Action>(Annotate)
nmap <leader>r <Action>(RenameElement)
nmap <leader>; <Action>(SelectInProjectView)
nmap <leader>f <Action>(GotoFile)
nmap <leader>cr <Action>(RecentFiles)
nmap <C-w>O <Action>(CloseAllEditorsButActive)
nmap ]e <Action>(GotoNextError)
nmap [e <Action>(GotoPreviousError)
vmap = <Action>(ReformatCode)
nmap = <Action>(ReformatCode)
nmap = <Action>(ReformatCode)
nmap <leader>b <Action>(ToggleLineBreakpoint)
nmap <leader>gl <Action>(Vcs.ShowTabbedFileHistory)
nmap <leader>p "0p
nmap <leader>p "0p
vmap <leader>gi d$i//#start_exclude_commit<esc>p']o<esc>0Di//#end_exclude_commit<esc>



" Do incremental searching.
set incsearch
set ignorecase
set smartcase
set number
set relativenumber
set hlsearch

" Don't use Ex mode, use Q for formatting.
map Q gq

" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugins

" Highlight copied text
Plug 'machakann/vim-highlightedyank'
" Commentary plugin
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-surround'
Plug 'terryma/vim-multiple-cursors'
Plug 'vim-scripts/argtextobj.vim'
Plug 'machakann/vim-highlightedyank'
Plug 'michaeljsmith/vim-indent-object'
Plug 'tommcdo/vim-exchange'


"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
"" Map \r to the Reformat Code action
"map \r <Action>(ReformatCode)

"" Map <leader>d to start debug
"map <leader>d <Action>(Debug)

"" Map \b to toggle the breakpoint on the current line
"map \b <Action>(ToggleLineBreakpoint)
